// <auto-generated />
using System;
using Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Database.Migrations
{
    [DbContext(typeof(MyDBContext))]
    [Migration("20210503224002_DefaultPlaces")]
    partial class DefaultPlaces
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.14");

            modelBuilder.Entity("Database.Models.City", b =>
                {
                    b.Property<int>("CityId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CityName")
                        .HasColumnType("TEXT");

                    b.Property<byte[]>("Image")
                        .HasColumnType("BLOB");

                    b.HasKey("CityId");

                    b.ToTable("Cities");

                    b.HasData(
                        new
                        {
                            CityId = 1,
                            CityName = "Los Angeles"
                        },
                        new
                        {
                            CityId = 2,
                            CityName = "Zp"
                        });
                });

            modelBuilder.Entity("Database.Models.Place", b =>
                {
                    b.Property<int>("PlaceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CityId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Cost")
                        .HasColumnType("REAL");

                    b.Property<string>("PlaceName")
                        .HasColumnType("TEXT");

                    b.Property<string>("Street")
                        .HasColumnType("TEXT");

                    b.Property<int>("Time")
                        .HasColumnType("INTEGER");

                    b.HasKey("PlaceId");

                    b.HasIndex("CityId");

                    b.ToTable("Places");

                    b.HasData(
                        new
                        {
                            PlaceId = 1,
                            CityId = 1,
                            Cost = 300.0,
                            PlaceName = "Santa Monica Beach",
                            Street = "None",
                            Time = 99999
                        },
                        new
                        {
                            PlaceId = 2,
                            CityId = 1,
                            Cost = 300.0,
                            PlaceName = "Hollywood",
                            Street = "None",
                            Time = 99999
                        },
                        new
                        {
                            PlaceId = 3,
                            CityId = 2,
                            Cost = 300.0,
                            PlaceName = "Baburka",
                            Street = "None",
                            Time = 0
                        },
                        new
                        {
                            PlaceId = 4,
                            CityId = 2,
                            Cost = 300.0,
                            PlaceName = "Center",
                            Street = "None",
                            Time = 0
                        });
                });

            modelBuilder.Entity("Database.Models.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Login")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .HasColumnType("TEXT");

                    b.HasKey("ID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Database.Models.Place", b =>
                {
                    b.HasOne("Database.Models.City", "City")
                        .WithMany("Places")
                        .HasForeignKey("CityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
